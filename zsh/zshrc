# Path to oh-my-zsh installation.
export ZSH=/home/antcc/.oh-my-zsh

# Theme
ZSH_THEME="powerlevel9k/powerlevel9k"
#source /usr/share/zsh-theme-powerlevel9k/powerlevel9k.zsh-theme

# Powerlevel9k config
POWERLEVEL9K_INSTALLATION_PATH=$ZSH/custom/themes/powerlevel9k
POWERLEVEL9K_MODE="awesome-patched"
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(root_indicator context dir vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(virtualenv anaconda status)
POWERLEVEL9K_SHORTEN_DIR_LENGTH="2"
POWERLEVEL9K_STATUS_VERBOSE="false"
POWERLEVEL9K_VCS_GIT_ICON=''
POWERLEVEL9K_VCS_GIT_GITHUB_ICON=''
POWERLEVEL9K_PYTHON_ICON='' #''

# Default user
DEFAULT_USER="antcc"

# Case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
#COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="dd.mm.yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(virtualenv poetry colorize dircycle extract zsh-autosuggestions z forgit zsh-history-substring-search)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
#export LANG=es_ES.utf8
export LC_CTYPE="es_ES.UTF-8"

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Tilix VTE configuration
if [ $TILIX_ID ] || [ $VTE_VERSION ]; then
        source /etc/profile.d/vte.sh
fi

# Set PATHs variable
export GOPATH=/home/antcc/Programas/Go
export PATH=/home/antcc/.local/bin:$GOPATH/bin:$(ruby -r rubygems -e "puts Gem.user_dir")/bin:~/.dotfiles/bin:~/.cargo/bin:$PATH
export RUST_SRC_PATH="$(rustc --print sysroot)/lib/rustlib/src/rust/src"

# Set default terminal
export TERMINAL=tilix

# PostgreSQL default dir
export SQL=/var/lib/postgres

# Continous pandoc compilation
mpandocmk() {
    while true; do
	pandoc ${@:2:$#+1} $1.md -o $1.pdf
	inotifywait -e modify,close_write $1.md
    done
}

# Autoload function path
FPATH=$ZSH/custom/autoload:$FPATH

# Ranger zsh integration
autoload -U zranger
bindkey -s '\ez' "\eq zranger\n"  # alt+z

# >>> mamba initialize >>>
# !! Contents within this block are managed by 'mamba init' !!
export MAMBA_EXE="/usr/bin/micromamba";
export MAMBA_ROOT_PREFIX="/home/antcc/.micromamba";
__mamba_setup="$('/usr/bin/micromamba' shell hook --shell zsh --prefix '/home/antcc/.micromamba' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__mamba_setup"
else
    if [ -f "/home/antcc/.micromamba/etc/profile.d/micromamba.sh" ]; then
        . "/home/antcc/.micromamba/etc/profile.d/micromamba.sh"
    else
        export  PATH="/home/antcc/.micromamba/bin:$PATH"  # extra space after export prevents interference from conda init
    fi
fi
unset __mamba_setup
# <<< mamba initialize <<<
